# AUTOGENERATED! DO NOT EDIT! File to edit: ../cat_categorizer.ipynb.

# %% auto 0
__all__ = ["learn", "breeds", "examples", "image", "label", "intf", "classify_cat"]

# %% ../cat_categorizer.ipynb 1
from duckduckgo_search import ddg_images
from fastcore.all import *
from fastai.vision.all import *
from fastai.data.all import *
import gradio as gr

# %% ../cat_categorizer.ipynb 2
learn = load_learner("model-2.pkl")

# %% ../cat_categorizer.ipynb 3
breeds = [
    "Abyssinian",
    "Aegean",
    "American Bobtail",
    "American Curl",
    "American Ringtail",
    "American Shorthair",
    "American Wirehair",
    "Aphrodite Giant",
    "Arabian Mau",
    "Asian",
    "Asian Semi-longhair",
    "Australian Mist",
    "Balinese",
    "Bambino",
    "Bengal",
    "Birman",
    "Bombay",
    "Brazilian Shorthair",
    "British Longhair",
    "British Shorthair",
    "Burmese",
    "Burmilla",
    "California Spangled",
    "Chantilly-Tiffany",
    "Chartreux",
    "Chausie",
    "Colorpoint Shorthair",
    "Cornish Rex",
    "Cymric",
    "Cyprus",
    "Devon Rex",
    "Donskoy",
    "Dragon Li",
    "Dwelf",
    "Egyptian Mau",
    "European Shorthair",
    "Exotic Shorthair",
    "Foldex",
    "German Rex",
    "Havana Brown",
    "Highlander",
    "Himalayan",
    "Japanese Bobtail",
    "Javanese",
    "Kanaani",
    "Khao Manee",
    "Kinkalow",
    "Korat",
    "Korean Bobtail",
    "Kurilian Bobtail",
    "Lambkin",
    "LaPerm",
    "Lykoi",
    "Maine Coon",
    "Manx",
    "Mekong Bobtail",
    "Minskin",
    "Minuet",
    "Munchkin",
    "Nebelung",
    "Neva Masquerade",
    "Norwegian Forest Cat",
    "Ocicat",
    "Ojos Azules",
    "Oregon Rex",
    "Oriental Bicolor",
    "Oriental Longhair",
    "Oriental Shorthair",
    "Persian (modern)",
    "Persian (traditional)",
    "Peterbald",
    "Pixie-bob",
    "Ragamuffin",
    "Ragdoll",
    "Raas",
    "Russian Blue",
    "Russian White, Russian Black and Russian Tabby",
    "Sam Sawet",
    "Savannah",
    "Scottish Fold",
    "Selkirk Rex",
    "Serengeti",
    "Serrade Petit",
    "Siamese",
    "Siberian",
    "Singapura",
    "Snowshoe",
    "Sokoke",
    "Somali",
    "Sphynx",
    "Suphalak",
    "Thai",
    "Thai Lilac, Thai Blue Point and Thai Lilac Point",
    "Tonkinese",
    "Toybob",
    "Toyger",
    "Turkish Angora",
    "Turkish Van",
    "Turkish Vankedisi",
    "Ukrainian Levkoy",
    "York Chocolate",
]

examples = [
    "examples/bambino.jpg",
    "examples/dwelf.jpg",
    "examples/scottish_fold.jpg",
    "examples/sphynx.jpg",
]


# %% ../cat_categorizer.ipynb 4
def classify_cat(img):
    _, _, probs = learn.predict(img)
    return dict(zip(breeds, map(float, probs)))


# %% ../cat_categorizer.ipynb 5
image = gr.inputs.Image(shape=(192, 192))
label = gr.outputs.Label()

intf = gr.Interface(fn=classify_cat, inputs=image, outputs=label, examples=examples)
intf.launch(inline=False)
